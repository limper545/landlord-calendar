// import { ApolloServer, ApolloError, ValidationError, gql } from 'apollo-server';


// const typeDefs = gql`
// type Profile {
//     firstname: String
//     name: String
// }

// type User {
//     usertype: String
//     __typename: String
//     profile: Profile
// }

// type Address {
//     street: String
//     houseNumber: String
//     city: String
//     country: String
//     zipCode: String
//     __typename: String
// }

// type Property {
//     id: String
//     name: String
//     inviteeCount: Int
//     __typename: String
//     user: User
//     attachments: [String]
//     address: Address
// }

// type Nodes {
//     id: String
//     date: String
//     maxInviteeCount: Int
//     attendeeCount: Int
//     __typename: String
//     property: Property
// }

// type Appointments {
//     __typename: String
//     page: Page
//     nodes: [Nodes]
// }

// type Data {
//     appointments: Appointments
// }

// type AutogeneratedMainType {
//     data: Data
// }
// `;


// interface Agent {
//     firstName: string;
//     name: string;
//     title: string;
// }

// interface Appointment {
//     date: string;
//     time: string;
// }

// interface Property {

//     propertyName: string;
//     street: string;
//     houseNumber: string;
//     city: string;
//     zipCode: string;
//     country: string;
// } 

// const resolvers = {
//     Query: {
//       async tweets() {
//         const tweets = await admin
//           .firestore()
//           .collection('tweets')
//           .get();
//         return tweets.docs.map(tweet => tweet.data()) as Tweet[];
//       },
//       async user(_: null, args: { id: string }) {
//         try {
//           const userDoc = await admin
//             .firestore()
//             .doc(`users/${args.id}`)
//             .get();
//           const user = userDoc.data() as User | undefined;
//           return user || new ValidationError('User ID not found');
//         } catch (error) {
//           throw new ApolloError(error);
//         }
//       }
//     },
//     User: {
//       async tweets(user) {
//         try {
//           const userTweets = await admin
//             .firestore()
//             .collection('tweets')
//             .where('userId', '==', user.id)
//             .get();
//           return userTweets.docs.map(tweet => tweet.data()) as Tweet[];
//         } catch (error) {
//           throw new ApolloError(error);
//         }
//       }
//     },
//     Tweets: {
//       async user(tweet) {
//         try {
//           const tweetAuthor = await admin
//             .firestore()
//             .doc(`users/${tweet.userId}`)
//             .get();
//           return tweetAuthor.data() as User;
//         } catch (error) {
//           throw new ApolloError(error);
//         }
//       }
//     }
//   };
  
//   const server = new ApolloServer({
//     typeDefs,
//     resolvers,
//     engine: {
//       apiKey: "<APOLLO ENGINE API KEY HERE>"
//     },
//     introspection: true
//   });